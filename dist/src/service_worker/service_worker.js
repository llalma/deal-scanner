var p=(e,a)=>()=>(a||e((a={exports:{}}).exports,a),a.exports);var r=(e,a,t)=>new Promise((o,i)=>{var l=s=>{try{c(t.next(s))}catch(n){i(n)}},y=s=>{try{c(t.throw(s))}catch(n){i(n)}},c=s=>s.done?o(s.value):Promise.resolve(s.value).then(l,y);c((t=t.apply(e,a)).next())});var m=p(d=>{function g(e,a){return r(this,null,function*(){const t=(yield chrome.storage.sync.get([e]))[e],o=Object.assign({},t,a);chrome.storage.sync.set({[e]:o})})}chrome.runtime.onMessage.addListener((e,a,t)=>r(d,null,function*(){switch(e.type){case"scan":console.log("scan");break;case"update":yield g(e.payload.key,e.payload.data);break;case"remove_css":console.log("remove"),yield chrome.scripting.removeCSS({files:["src/injections/injection.css"],target:{tabId:a.tab.id}});break;default:console.error(`Not a valid message type: ${e.type}`)}}))});export default m();
