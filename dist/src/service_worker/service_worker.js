var y=(t,e)=>()=>(e||t((e={exports:{}}).exports,e),e.exports);var r=(t,e,a)=>new Promise((o,l)=>{var s=c=>{try{n(a.next(c))}catch(u){l(u)}},i=c=>{try{n(a.throw(c))}catch(u){l(u)}},n=c=>c.done?o(c.value):Promise.resolve(c.value).then(s,i);n((a=a.apply(t,e)).next())});import{s as p}from"../helpers/helpers.js";var E=y(h=>{function m(t,e){return r(this,null,function*(){const a=(yield chrome.storage.sync.get([t]))[t],o=Object.assign({},a,e);chrome.storage.sync.set({[t]:o})})}d();chrome.storage.onChanged.addListener((t,e)=>r(h,null,function*(){e==="sync"&&_()}));function _(){return r(this,null,function*(){const e=Object.entries(yield chrome.storage.sync.get()).filter((a,o)=>a[1].alert_bool).length;(yield chrome.action.getBadgeText({}))!==g&&(chrome.action.setBadgeText({text:String(e)}),chrome.action.setBadgeBackgroundColor({color:w}))})}const g="!",f="red",w="blue";function b(t,e){return r(this,null,function*(){let a;switch(e){case 1:a="Unable to locate xpath on webpage";break;default:a="Unhandled error_id";break}yield m(t,{error_alert:{id:e,msg:a},alert_bool:!1}),chrome.action.setBadgeText({text:g}),chrome.action.setBadgeBackgroundColor({color:f})})}function d(){return r(this,null,function*(){if(Object.entries(yield chrome.storage.sync.get()).filter((a,o)=>Object.keys(a[1].error_alert).length!==0).length>0){chrome.action.setBadgeText({text:g}),chrome.action.setBadgeBackgroundColor({color:f});return}chrome.action.setBadgeText({text:""}),_()})}function x(t){return new Promise((e,a)=>{let o;const l=()=>{try{const n=document.evaluate(t,document,null,XPathResult.FIRST_ORDERED_NODE_TYPE,null).singleNodeValue;if(n)return clearTimeout(o),e({error:!1,msg:n.textContent}),!0;if(i>15)throw new Exception("Could not find element on given xpath");return!1}catch(n){return i>15?(e({error:!0,msg:"Could not find element on given xpath2"}),!0):!1}},s=()=>{document.readyState==="interactive"||document.readyState==="complete"?l()||(setTimeout(s,100),i++):setTimeout(s,100)};let i=0;s()})}function k(t,e){return r(this,null,function*(){const a=yield chrome.scripting.executeScript({target:{tabId:t},func:x,args:[e]});if(a[0].result.error)throw new Error("Could not find xpath");return a[0].result.msg})}function B(t,e){return r(this,null,function*(){const a=yield chrome.tabs.create({url:e.link,active:!0});try{const o=yield k(a.id,e.xpath);parseFloat(p(o))<parseFloat(e.target_price)&&(yield m(t,{alert_bool:!0,error_alert:{}}))}catch(o){yield b(t,1)}chrome.tabs.remove(a.id)})}function T(t){return r(this,null,function*(){yield Promise.all(t.map(o=>r(this,[o],function*([e,a]){yield B(e,a)})))})}chrome.runtime.onMessage.addListener((t,e,a)=>r(h,null,function*(){switch(t.type){case"scan":yield T(t.payload);break;case"update":yield m(t.payload.key,t.payload.data),yield d();break;case"delete":yield chrome.storage.sync.remove(t.payload.key),yield d();break;case"remove_css":yield chrome.scripting.removeCSS({files:["src/injections/injection.css"],target:{tabId:e.tab.id}});break;default:console.error(`Not a valid message type: ${t.type}`)}}))});export default E();
